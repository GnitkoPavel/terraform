version: '3.8'
services:
  db:
    hostname: db.magento2.docker
    image: 'mariadb:10.4'
    environment:
      - MYSQL_ROOT_PASSWORD=magento2
      - MYSQL_DATABASE=magento2
      - MYSQL_USER=magento2
      - MYSQL_PASSWORD=magento2
    volumes:
      - 'm2-old-renew:/app:nocopy'
      - 'm2-old-renew-db:/var/lib/mysql'
    healthcheck:
      test: 'mysqladmin ping -h localhost -pmagento2'
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      magento:
        aliases:
          - db.magento2.docker

  fpm:
    hostname: fpm.magento2.docker
    image: 'magento/magento-cloud-docker-php:7.3-fpm-1.2.1'
    environment:
      - PHP_MEMORY_LIMIT=-1
      - UPLOAD_MAX_FILESIZE=64M
      - MAGENTO_ROOT=/app
      - INSTALLATION_TYPE=composer
      - COMPOSER_HOME=/composer
      - MAGENTO_RUN_MODE=developer
      - PHP_EXTENSIONS=bcmath bz2 calendar exif gd gettext intl mysqli pcntl pdo_mysql soap sockets sysvmsg sysvsem sysvshm zip xsl sodium
      - CONFIG__DEFAULT__ADMIN__SECURITY__SESSION_LIFETIME=31536000

    volumes:
      - 'm2-old-renew:/app:nocopy'
    networks:
      magento:
        aliases:
          - fpm.magento2.docker
    depends_on:
      - db

  deploy:
    hostname: deploy.magento2.docker
    image: 'magento/magento-cloud-docker-php:7.3-cli-1.2.1'
    environment:
      - PHP_MEMORY_LIMIT=-1
      - UPLOAD_MAX_FILESIZE=64M
      - MAGENTO_ROOT=/app
      - INSTALLATION_TYPE=composer
      - COMPOSER_HOME=/composer
      - MAGENTO_RUN_MODE=developer
      - PHP_EXTENSIONS=bcmath bz2 calendar exif gd gettext intl mysqli pcntl pdo_mysql soap sockets sysvmsg sysvsem sysvshm zip xsl sodium
      - CONFIG__DEFAULT__ADMIN__SECURITY__SESSION_LIFETIME=31536000
    volumes:
      - 'm2-old-renew:/app:nocopy'
      - 'composer_cache:/composer:nocopy'
      - ~/.ssh:/root/.ssh
    networks:
      magento:
        aliases:
          - deploy.magento2.docker
    depends_on:
      - db

  web:
    hostname: web.magento2.docker
    image: 'magento/magento-cloud-docker-nginx:1.19-1.2.1'
    volumes:
      - 'm2-old-renew:/app:nocopy'
    environment:
      - WITH_XDEBUG=0
      - NGINX_WORKER_PROCESSES=1
      - NGINX_WORKER_CONNECTIONS=1024
    ports:
      - '80:80'
    networks:
      magento:
        aliases:
          - web.magento2.docker
    depends_on:
      - fpm

  mailhog:
    hostname: mailhog.magento2.docker
    image: 'mailhog/mailhog:latest'
    ports:
      - '8027:8025'
    networks:
      magento:
        aliases:
          - mailhog.magento2.docker

  # Add PhpMyAdmin for handling DB
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - 3130:80
    networks:
      magento:
        aliases:
          - phpmyadmin.magento2.docker
    environment:
      - PMA_HOST=db
      - PMA_USER=root
      - PMA_PASSWORD=magento2
    depends_on:
      - db

volumes:
  # Adding composer cache volume
  composer_cache:
    external: true
  m2-old-renew: {  }
  m2-old-renew-db: {  }
networks:
  magento:
    driver: bridge
